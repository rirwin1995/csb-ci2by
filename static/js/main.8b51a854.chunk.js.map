{"version":3,"sources":["batchdetailspage/components/ContRowCol.js","batchdetailspage/components/bottleNumbersInBatch.js","batchdetailspage/components/ColLarge.js","batchdetailspage/components/scentChart.js","batchdetailspage/components/Notes.js","batchdetailspage/components/SpecialistVarieties.js","batchdetailspage/components/HeroSection.js","batchdetailspage/components/ColXL.js","batchdetailspage/components/perfumeDescription.js","batchdetailspage/BatchDetailsPage.js","App.js","index.js"],"names":["COLSmall","props","Col","xs","sm","md","lg","Card","id","className","style","margin","title","component","BottleNumbersInBatch","bottleNumbers","map","number","display","listStyleType","COLLarge","data","name","fill","ScentChart","ResponsiveContainer","width","height","BarChart","top","right","left","bottom","Tooltip","XAxis","interval","dataKey","Bar","Notes","Row","Object","keys","notes","note","xl","border","Img","src","objectFit","Body","textAlign","padding","SpecialistVarieties","varieties","variety","HeroSection","COLXL","PerfumeDescription","perfumeDescription","BatchDetailsPage","batchDetailsData","dateOfBottling","dateOfCompounding","dateOfHarvesting","harvester","nameOfPerfume","keyCrop","batch","bottleNumber","bottlenumber","specialistVarieties","notesData","Container","color","spac","length","heart","axios","require","App","useState","BatchDetails","setBatchDetails","bottleMessage","setBottleMessage","batchMessage","setBatchMessage","identifiedBatchNumber","setIdentifiedBatchNumber","identifiedBottleNumber","setIdentifiedBottleNumber","showPage","setShowPage","formik","useFormik","initialValues","batchnumber","onSubmit","values","a","get","then","result","checkBottle","batchDetailsInGenBotMes","includes","parseInt","Form","handleSubmit","Stack","direction","gap","Control","type","onChange","handleChange","value","placeholder","Button","variant","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8b51a854.chunk.js","sourcesContent":["import { Row, Col, Container, Card } from \"react-bootstrap\";\r\n\r\nexport default function COLSmall(props) {\r\n  return (\r\n    <Col xs={12} sm={6} md={6} lg={3}>\r\n      <Card id=\"blueCard\" className=\"Card\" style={{ margin: \"10px\" }}>\r\n        <h6 className=\"h6\">{props.title}</h6>\r\n        <h3>{props.component}</h3>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","export default function BottleNumbersInBatch(props) {\r\n  return (\r\n    <>\r\n      <ul className=\"ula\" style={{ \"list-style-type\": \"none\" }}>\r\n        {props.bottleNumbers.map((number) => (\r\n          <li style={{ display: \"inline\", listStyleType: \"none\" }}>\r\n            <a>{number} </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { Row, Col, Container, Card } from \"react-bootstrap\";\r\n\r\nexport default function COLLarge(props) {\r\n  return (\r\n    <Col xs={12} sm={12} md={12} lg={6}>\r\n      <Card id=\"redCard\" className=\"Card\" style={{ margin: \"10px\" }}>\r\n        <h6 className=\"h6\">{props.title}</h6>\r\n        <p>{props.component}</p>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import {\r\n  ResponsiveContainer,\r\n  Bar,\r\n  BarChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from \"recharts\";\r\nimport { createClass } from \"react\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Lavender\",\r\n    \"%\": 100,\r\n    fill: \"#C58BF0\"\r\n  },\r\n  {\r\n    name: \"Aromatic\",\r\n    \"%\": 90,\r\n    fill: \"#23BD91\"\r\n  },\r\n  {\r\n    name: \"Citrus\",\r\n    \"%\": 72,\r\n    fill: \"#FFFC4A\"\r\n  },\r\n\r\n  {\r\n    name: \"Vanilla\",\r\n    \"%\": 65,\r\n    fill: \"#F5E2B4\"\r\n  },\r\n  {\r\n    name: \"Amber\",\r\n    \"%\": 62,\r\n    fill: \"#FFA958\"\r\n  },\r\n  {\r\n    name: \"Woody\",\r\n    \"%\": 58,\r\n    fill: \"#713700\"\r\n  },\r\n  {\r\n    name: \"Powdery\",\r\n    \"%\": 51,\r\n    fill: \"#FFFCE7\"\r\n  }\r\n];\r\n\r\nexport default function ScentChart() {\r\n  return (\r\n    <ResponsiveContainer width={\"98%\"} height={300}>\r\n      <BarChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 30,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <Tooltip />\r\n        <XAxis interval={0} dataKey=\"name\" />\r\n        <Bar dataKey=\"%\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n","import { Card, Col, Row } from \"react-bootstrap\";\r\n\r\nexport default function Notes(props) {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <br />\r\n      <Row className=\"justify-content-md-center\">\r\n        {Object.keys(props.notes).map((note) => (\r\n          <Col xs={6} sm={4} md={3} lg={6} xl={4}>\r\n            <Card\r\n              className=\"noteCard\"\r\n              style={{ margin: \"3px\", border: \"none\" }}\r\n            >\r\n              <Card.Img\r\n                src={props.notes[note]}\r\n                height=\"50px\"\r\n                style={{ objectFit: \"contain\" }}\r\n              />\r\n              <Card.Body\r\n                style={{ textAlign: \"center\", padding: \"0%\", margin: \"0%\" }}\r\n              >\r\n                {note}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","export default function SpecialistVarieties(props) {\r\n  var varieties = props.varieties;\r\n  return (\r\n    <>\r\n      <br />\r\n      <ul>\r\n        {Object.keys(varieties).map((variety) => (\r\n          <li style={{ listStyleType: \"none\" }}>\r\n            <h2>{variety}</h2>\r\n            <p>{varieties[variety]}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function HeroSection() {\r\n  return null;\r\n}\r\n","import { Row, Col, Container, Card } from \"react-bootstrap\";\r\n\r\nexport default function COLXL(props) {\r\n  return (\r\n    <Col xs={12} sm={12} md={12} lg={12}>\r\n      <Card id=\"redCard\" className=\"Card\" style={{ margin: \"10px\" }}>\r\n        <h6 className=\"h6\">{props.title}</h6>\r\n        <p>{props.component}</p>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","export default function PerfumeDescription(props) {\r\n  return (\r\n    <>\r\n      <br />\r\n      <p>{props.perfumeDescription}</p>\r\n    </>\r\n  );\r\n}\r\n","import COLSmall from \"./components/ContRowCol\";\r\nimport BottleNumbersInBatch from \"./components/bottleNumbersInBatch\";\r\nimport Overview from \"./components/overview\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport COLLarge from \"./components/ColLarge\";\r\nimport ScentChart from \"./components/scentChart\";\r\nimport Notes from \"./components/Notes\";\r\nimport SpecialistVarieties from \"./components/SpecialistVarieties\";\r\nimport HeroSection from \"./components/HeroSection\";\r\nimport COLXL from \"./components/ColXL\";\r\nimport PerfumeDescription from \"./components/perfumeDescription\";\r\n\r\nexport default function BatchDetailsPage(props) {\r\n  // COLLATE DATA\r\n  var batchDetailsData = props.batchDetailsData;\r\n  var bottleNumbers = batchDetailsData.bottleNumbers;\r\n  var dateOfBottling = batchDetailsData.dateOfBottling;\r\n  var dateOfCompounding = batchDetailsData.dateOfCompounding;\r\n  var dateOfHarvesting = batchDetailsData.dateOfHarvesting;\r\n  var harvester = batchDetailsData.harvester;\r\n  var nameOfPerfume = batchDetailsData.name;\r\n  var batch = props.batch;\r\n  var keyCrop = batchDetailsData.keyCrop;\r\n  var bottleNumber = props.bottlenumber;\r\n  var specialistVarieties = props.batchDetailsData.specialistVarieties;\r\n  var notesData = props.batchDetailsData.notes;\r\n  var perfumeDescription = batchDetailsData.perfumeDescription;\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <HeroSection />\r\n      </Container>\r\n\r\n      <Container>\r\n        {/* OVERVIEW - NAME - HOUSE */}\r\n        <hr />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <h1 style={{ color: \"white\" }}>Batch</h1>\r\n          </Col>{\" \"}\r\n          <COLSmall\r\n            id=\"woodyCard\"\r\n            spac=\"2\"\r\n            title=\"Verification\"\r\n            component={\r\n              <>\r\n                <div style={{ display: \"inline-block\" }}>\r\n                  <p>Verified</p>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n          <COLSmall\r\n            id=\"woodyCard\"\r\n            spac=\"2\"\r\n            title=\"Your Bottle is\"\r\n            component={\r\n              <p>\r\n                {bottleNumber}/{bottleNumbers.length}\r\n              </p>\r\n            }\r\n          />\r\n          <COLLarge\r\n            title=\"Bottles in Batch\"\r\n            component={<BottleNumbersInBatch bottleNumbers={bottleNumbers} />}\r\n          />\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"justify-content-md-center\">\r\n          {/* OVERVIEW */}\r\n          <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <h1 style={{ color: \"white\" }}>Perfume</h1>\r\n          </Col>\r\n          <COLSmall spac=\"2\" title=\"Name\" component={<p>{nameOfPerfume}</p>} />\r\n\r\n          <COLSmall\r\n            spac=\"2\"\r\n            title=\"Manufactured by\"\r\n            component={<p>Scottish Lavender Oils</p>}\r\n          />\r\n\r\n          <COLSmall\r\n            spac=\"2\"\r\n            title=\"Compounded on\"\r\n            component={<p>{dateOfCompounding}</p>}\r\n          />\r\n\r\n          <COLSmall\r\n            spac=\"2\"\r\n            title=\"Bottled on\"\r\n            component={<p>{dateOfBottling}</p>}\r\n          />\r\n          {/* Scent profile */}\r\n          {/* OVERVIEW */}\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <h1 style={{ color: \"white\" }}>Specialist Crops</h1>\r\n          </Col>\r\n          <COLSmall\r\n            id=\"lavenderCard\"\r\n            spac=\"2\"\r\n            title=\"Main Ingredient\"\r\n            component={<p>{keyCrop}</p>}\r\n          />\r\n          <COLSmall\r\n            id=\"woodyCard\"\r\n            spac=\"2\"\r\n            title=\"Harvested & Distilled on\"\r\n            component={<p>{dateOfHarvesting}</p>}\r\n          />\r\n          <COLSmall\r\n            id=\"woodyCard\"\r\n            spac=\"2\"\r\n            title=\"Harvested by\"\r\n            component={<p>{harvester}</p>}\r\n          />\r\n          <COLSmall\r\n            id=\"woodyCard\"\r\n            spac=\"2\"\r\n            title=\"Grown on\"\r\n            component={<p>Scottish Lavender Oils, Tarhill Farm, Kinross</p>}\r\n          />\r\n          <COLXL\r\n            title=\"Specialist Varieties in Perfume\"\r\n            component={<SpecialistVarieties varieties={specialistVarieties} />}\r\n          />\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n            <h1 style={{ color: \"white\" }}>Perfume Profile</h1>\r\n          </Col>\r\n          <COLXL\r\n            title=\"Marina's View from Italy\"\r\n            component={\r\n              <PerfumeDescription perfumeDescription={perfumeDescription} />\r\n            }\r\n          />\r\n          <COLLarge component={<ScentChart />} />\r\n          <COLLarge\r\n            title=\"Top Notes\"\r\n            component={<Notes notes={notesData.top} />}\r\n          />\r\n          <COLLarge\r\n            title=\"Heart Notes\"\r\n            component={<Notes notes={notesData.heart} />}\r\n          />\r\n          <COLLarge\r\n            title=\"Base Notes\"\r\n            component={<Notes notes={notesData.bottom} />}\r\n          />\r\n        </Row>\r\n        {/* OVERVIEW - REST */}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","// import libraries and moduls\nimport React from \"react\";\nimport \"./styles.css\";\nimport { useFormik } from \"formik\";\nimport \"axios\";\nimport { useState } from \"react\";\nimport BatchDetailsPage from \"./batchdetailspage/BatchDetailsPage\";\nimport { Form, Stack, Button } from \"react-bootstrap\";\nconst axios = require(\"axios\");\n\n// App default passed to index\nexport default function App() {\n  // define all states.\n  const [BatchDetails, setBatchDetails] = useState(\"Enter Batch Details\");\n  const [bottleMessage, setBottleMessage] = useState(\"\");\n  const [batchMessage, setBatchMessage] = useState(\"\");\n  const [identifiedBatchNumber, setIdentifiedBatchNumber] = useState(null);\n  const [identifiedBottleNumber, setIdentifiedBottleNumber] = useState(null);\n  const [showPage, setShowPage] = useState(false);\n\n  // formik function\n  const formik = useFormik({\n    // formik initial values : bottlenumber and batch number so\n    // starts with nothing showing\n    initialValues: {\n      bottlenumber: \"\",\n      batchnumber: \"\"\n    },\n    // WHEN SUBMIT BUTTON IS PRESSED\n    onSubmit: async (values) => {\n      // define batchnumber  as the value input in the form\n      // batch input at the time of pressing Submit button\n      var batchnumber = formik.values.batchnumber;\n      // send query to database with batch number\n      await axios\n        .get(\n          `https://perfumetracker-default-rtdb.europe-west1.firebasedatabase.app/batches/${batchnumber}.json`\n        )\n        .then(function (result) {\n          // if there is no data in db then response.data will be null\n          if (result.data === null) {\n            // no batch number data found\n            // hide page - showPage(false)\n            setShowPage(false);\n            // set batchDetails to null. this is not strictly\n            // necessary as the <BatchDetailsPage /> should not be\n            // called if ShowPage state is false\n            setBatchDetails(null);\n            // display message - Batch not found\n            setBatchMessage(\"Batch Not Found\");\n            // do not show any bottle message\n            setBottleMessage(\"\");\n          } else {\n            // set BatchDetails state to the the details returned\n            // from the database\n            setBatchDetails(result.data);\n            // show batch message\n            setBatchMessage(`Batch Identified: ${batchnumber}`);\n            // check if the bottle entered is in the batch.\n            // call checkBottle function.\n            // checkBottle function takes in the result data\n            // and checks if the bottle number is included in the\n            // batch bottles list.\n            // if true, then:\n            //     1. set bottle message to succes\n            //     2. set IdentifiedBottleNumber to bottle number form\n            //        so this bottlenumber can be passed to <BatchDet.. />\n            //     3. ShowPage state to true so the <BatchDetailsPage/>\n            //        is called\n            // if false, then:\n            //     1. set bottle message to say that bottle not found.\n            //     2. set show page to false so <BatchDetailsPage />\n            //        is hidden (if it was previously showing)\n\n            checkBottle(result.data);\n            // set the state identifiedBatchNumber to the batch\n            // batch number in the form input.\n            setIdentifiedBatchNumber(batchnumber);\n          }\n        });\n    }\n  });\n\n  // FUNCTION THAT checks bottle in batch and generate message BOTTLE MESSAGE\n\n  function checkBottle(batchDetailsInGenBotMes) {\n    var bottleNumbersInGenBotMes = batchDetailsInGenBotMes.bottleNumbers;\n    if (\n      bottleNumbersInGenBotMes.includes(\n        parseInt(formik.values.bottlenumber, 10)\n      )\n    ) {\n      setBottleMessage(`Bottle Identified: ${formik.values.bottlenumber}`);\n      setIdentifiedBottleNumber(formik.values.bottlenumber);\n      setShowPage(true);\n    } else {\n      setBottleMessage(\"Bottle Not Found\");\n      setShowPage(false);\n    }\n  }\n\n  // RETURN\n\n  return (\n    <div className=\"App\">\n      {/*  FORM  */}\n      <div style={{ padding: \"5%\" }}>\n        <Form onSubmit={formik.handleSubmit}>\n          <Stack direction=\"horizontal\" gap={3}>\n            <Form.Control\n              id=\"bottlenumber\"\n              name=\"bottlenumber\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.bottlenumber}\n              className=\"me-auto\"\n              placeholder=\"Bottle Number...\"\n            />\n            <Form.Control\n              id=\"batchnumber\"\n              name=\"batchnumber\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.batchnumber}\n              placeholder=\"Batch Number...\"\n            />\n            <Button variant=\"secondary\" type=\"submit\">\n              Submit\n            </Button>\n          </Stack>\n        </Form>\n        {/*  END FORM  */}\n        <br />\n        {/*  batch message and bottle message  */}\n\n        <p style={{ color: \"white\" }}>{batchMessage}</p>\n        <p style={{ color: \"white\" }}>{bottleMessage}</p>\n\n        <br />\n        {/*  BATCH DETAIL PAGE - SEND IDENTIFIED BATCH NUMBER WHICH IS NULL UNLESS SUCCESSFULLY FOUND IN THE DB  */}\n\n        {/*  if showPage is true then show Batch details.  */}\n        {/*  otherwise show blank <p></p> */}\n\n        {showPage ? (\n          <BatchDetailsPage\n            batchDetailsData={BatchDetails}\n            batch={identifiedBatchNumber}\n            bottlenumber={identifiedBottleNumber}\n          />\n        ) : (\n          <p></p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}